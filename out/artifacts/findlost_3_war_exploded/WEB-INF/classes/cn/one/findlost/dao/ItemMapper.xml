<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.one.findlost.dao.ItemMapper" >
  <resultMap id="BaseResultMap" type="cn.one.findlost.pojo.Item" >
    <id column="itemID" property="itemid" jdbcType="BIGINT" />
    <result column="createByID" property="createbyid" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="iamge_id" property="iamgeId" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    itemID, createByID, userName, remark, iamge_id, date, status, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.one.findlost.pojo.ItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from item
    where itemID = #{itemid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from item
    where itemID = #{itemid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.one.findlost.pojo.ItemExample" >
    delete from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.one.findlost.pojo.Item" >
    insert into item (itemID, createByID, userName, 
      remark, iamge_id, date, 
      status, type)
    values (#{itemid,jdbcType=BIGINT}, #{createbyid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{iamgeId,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.one.findlost.pojo.Item" >
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemid != null" >
        itemID,
      </if>
      <if test="createbyid != null" >
        createByID,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="iamgeId != null" >
        iamge_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemid != null" >
        #{itemid,jdbcType=BIGINT},
      </if>
      <if test="createbyid != null" >
        #{createbyid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="iamgeId != null" >
        #{iamgeId,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.one.findlost.pojo.ItemExample" resultType="java.lang.Integer" >
    select count(*) from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update item
    <set >
      <if test="record.itemid != null" >
        itemID = #{record.itemid,jdbcType=BIGINT},
      </if>
      <if test="record.createbyid != null" >
        createByID = #{record.createbyid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.iamgeId != null" >
        iamge_id = #{record.iamgeId,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update item
    set itemID = #{record.itemid,jdbcType=BIGINT},
      createByID = #{record.createbyid,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      iamge_id = #{record.iamgeId,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.one.findlost.pojo.Item" >
    update item
    <set >
      <if test="createbyid != null" >
        createByID = #{createbyid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="iamgeId != null" >
        iamge_id = #{iamgeId,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where itemID = #{itemid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.one.findlost.pojo.Item" >
    update item
    set createByID = #{createbyid,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      iamge_id = #{iamgeId,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where itemID = #{itemid,jdbcType=BIGINT}
  </update>

  <!--查询接着的十条数据-->
  <select id="queryNext" parameterType="java.lang.Long" resultType="cn.one.findlost.pojo.Item">
        SELECT  *  from item
        WHERE itemID  &lt;  #{itemID} and status = 0 order by itemID DESC limit 0,9;
  </select>

  <select id="queryLasted" resultType="cn.one.findlost.pojo.Item">
     SELECT  *  from item where status = 0
        order by itemID DESC limit 0,9;
  </select>

  <insert id="insertItem" parameterType="cn.one.findlost.pojo.Item">
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="itemid">
      SELECT LAST_INSERT_ID()
    </selectKey>

    INSERT INTO item values(NULL ,#{createbyid},#{username},#{remark},#{iamgeId},#{date},#{status},#{type});
  </insert>

  <select id="selectType" resultType="cn.one.findlost.pojo.Item">
    select * from item
      where type = #{0} and status = 0 limit #{1},#{2}
  </select>

<select id="selectImageId" parameterType="java.lang.Long" resultType="java.lang.String">
    SELECT iamge_id FROM item WHERE itemID = #{id};
</select>
<update id="changeStaus" parameterType="java.lang.Long">
    UPDATE  item SET STATUS = 1 WHERE itemID = #{id}
</update>

</mapper>